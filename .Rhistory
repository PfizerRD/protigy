library(caret)
install.packages('caret', dependencies = T)
caret
library(caret)
data(segmentationData)
str(segmentationData)
training <- subset(segmentationData, Case == "Train")
testing <- subset(segmentationData, Case == "Test")
training
View(training)
training$Case <- NULL
View(testing)
testing$Case <- NULL
testing$Cell <- NULL
training$Cell <- NULL
?predict
trainX <- training[, names(training) != "Class"]
## Methods are "BoxCox", "YeoJohnson", center", "scale",
## "range", "knnImpute", "bagImpute", "pca", "ica" and
## "spatialSign"
preProcValues <- preProcess(trainX, method = c("center", "scale"))
preProcValues
scaledTrain <- predict(preProcValues, trainX)
View(scaledTrain)
mean(scaledTrain[,1])
mean(scaledTrain[,2])
mean(scaledTrain[,3])
sd(scaledTrain[,3])
sd(scaledTrain[,1])
sd(scaledTrain[,2])
shiny::runApp()
install.packages('limma')
setRepositories()
install.packages('limma')
shiny::runApp()
install.packages('hexbin')
install.packages('hexbin')
shiny::runApp()
shiny::runApp()
options(shiny.reactlog=TRUE)
shiny::runApp()
