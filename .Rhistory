library(pacman)
p_load(magrittr)
p_load(readxl)
setwd('//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171121_ssGSEA_intensity_vs_ratio_reports/')
source('c:/Users/karsten/Dropbox/Devel/R-code/my_plots.r')
source('c:/Users/karsten/Dropbox/Devel/R-code/my_io.r')
source('c:/Users/karsten/Dropbox/Devel/R-code/misc.r')
date.str <- sub(' .*', '', Sys.time())
dir.create(date.str)
int.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171108_gct/2017-11-09/results_pSTY-gene-centric-intensity_20171129-160327/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
rat.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_gct_ratio_report/2017-11-20/results_pSTY-gene-centric-ratio_20171129-161154/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
int <- read_excel(int.str)
rat <- read_excel(rat.str)
dim(int)
dim(rat)
# ratio
rat.gsea.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_ssGSEA_ratio_report/2017-11-20/pSTY-ratio_ssGSEA/results_pSTY-ratio-ssGSEA_20171129-153739/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
# intensity
int.gsea.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171108_ssGSEA/2017-11-20/pSTY_ssGSEA/results_pSTY-intensity-ssGSEA_20171129-154116/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
int.gsea <- read_excel(int.gsea.str)
rat.gsea <- read_excel(rat.gsea.str)
dim(int.gsea)
dim(rat.gsea)
colnames(int)
grep('NaiveCT.vs.ResCT', colnames(int))
grep('NaiveCT.vs.ResCT', colnames(int), value=T)
int.gsea.comp <- int.gsea[, grep(comp, colnames(int.gsea))]
rm(list=ls())
library(pacman)
p_load(magrittr)
p_load(readxl)
setwd('//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171121_ssGSEA_intensity_vs_ratio_reports/')
source('c:/Users/karsten/Dropbox/Devel/R-code/my_plots.r')
source('c:/Users/karsten/Dropbox/Devel/R-code/my_io.r')
source('c:/Users/karsten/Dropbox/Devel/R-code/misc.r')
date.str <- sub(' .*', '', Sys.time())
dir.create(date.str)
comp = 'NaiveCT.vs.ResCT'
int.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171108_gct/2017-11-09/results_pSTY-gene-centric-intensity_20171129-160327/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
rat.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_gct_ratio_report/2017-11-20/results_pSTY-gene-centric-ratio_20171129-161154/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
int <- read_excel(int.str)
rat <- read_excel(rat.str)
int.comp <- int[, grep(comp, colnames(int))]
rat.comp <- rat[, grep(comp, colnames(rat))]
# ratio
rat.gsea.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_ssGSEA_ratio_report/2017-11-20/pSTY-ratio_ssGSEA/results_pSTY-ratio-ssGSEA_20171129-153739/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
# intensity
int.gsea.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171108_ssGSEA/2017-11-20/pSTY_ssGSEA/results_pSTY-intensity-ssGSEA_20171129-154116/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
int.gsea <- read_excel(int.gsea.str)
rat.gsea <- read_excel(rat.gsea.str)
int.gsea.comp <- int.gsea[, grep(comp, colnames(int.gsea))]
rat.gsea.comp <- rat.gsea[, grep(comp, colnames(rat.gsea))]
plot(int.gsea.comp$logFC.NaiveCT.vs.ResCT, rat.gsea.comp$logFC.NaiveCT.vs.ResCT)
x=int.comp[, grep('logFC',colnames(int.comp))]
y=rat.comp[, grep('logFC',colnames(rat.comp))]
plot(x, y)
x
int.comp <- int[, grep(comp, colnames(int))] %>% as.numeric()
x=int.comp[, grep('logFC',colnames(int.comp))] %>% as.numeric()
int.comp <- int[, grep(comp, colnames(int))]
rat.comp <- rat[, grep(comp, colnames(rat))]
x=int.comp[, grep('logFC',colnames(int.comp))] %>% as.numeric()
grep('logFC',colnames(rat.comp))
rat.comp[, grep('logFC',colnames(rat.comp))]
x=int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y=rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
plot(x, y)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.p',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.p',colnames(rat.comp))] %>% unlist() %>% as.numeric()
plot(x, y)
xp
colnames(int.comp)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
plot(x, y)
xp
xp < 0.01
comp = 'NaiveCT.vs.ResCT'
fdr = 0.01
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[intersect(xs,ys)] <- 'red'
plot(x, y, col=col, pch=20)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[intersect(xs,ys)] <- 'red'
plot(x, y, col=col, pch=20)
abline(v=0, h=0, col='grey30', lty='dashed')
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[intersect(xs,ys)] <- 'red'
plot(x, y, col=col, pch=20)
abline(v=0, h=0, col='grey40', lty='dashed')
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[intersect(xs,ys)] <- 'red'
plot(x, y, col=col, pch=20)
abline(v=0, h=0, col='grey60', lty='dashed')
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[intersect(xs,ys)] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based', ylab='Ratio-based')
abline(v=0, h=0, col='grey60', lty='dashed')
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[intersect(xs,ys)] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), both=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'greed', 'red'), pch=20)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), both=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'green', 'red'), pch=20)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), common=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'green', 'red'), pch=20)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-set-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), common=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'green', 'red'), pch=20)
x <- int.gsea.comp[, grep('logFC',colnames(int.gsea.comp))] %>% unlist() %>% as.numeric()
y <- rat.gsea.comp[, grep('logFC',colnames(rat.gsea.comp))] %>% unlist() %>% as.numeric()
xp <- int.gsea.comp[, grep('adj.P',colnames(int.gsea.comp))] %>% unlist() %>% as.numeric()
yp <- rat.gsea.comp[, grep('adj.P',colnames(rat.gsea.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), common=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'green', 'red'), pch=20)
x <- int.comp[, grep('logFC',colnames(int.comp))] %>% unlist() %>% as.numeric()
y <- rat.comp[, grep('logFC',colnames(rat.comp))] %>% unlist() %>% as.numeric()
xp <- int.comp[, grep('adj.P',colnames(int.comp))] %>% unlist() %>% as.numeric()
yp <- rat.comp[, grep('adj.P',colnames(rat.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-set-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), common=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'green', 'red'), pch=20, title='FDR<1% (2-sample modT)')
x <- int.gsea.comp[, grep('logFC',colnames(int.gsea.comp))] %>% unlist() %>% as.numeric()
y <- rat.gsea.comp[, grep('logFC',colnames(rat.gsea.comp))] %>% unlist() %>% as.numeric()
xp <- int.gsea.comp[, grep('adj.P',colnames(int.gsea.comp))] %>% unlist() %>% as.numeric()
yp <- rat.gsea.comp[, grep('adj.P',colnames(rat.gsea.comp))] %>% unlist() %>% as.numeric()
# significant features
xs <- which(xp < fdr)
ys <- which(yp < fdr)
xs.ys <- intersect(xs,ys)
## colors
col <- rep('grey', length(x))
col[xs] <- 'blue'
col[ys] <- 'green'
col[xs.ys] <- 'red'
plot(x, y, col=col, pch=20, xlab='Intensity-based logFC', ylab='Ratio-based logFC', main=paste(comp, '\n(gene-set-centric)'))
abline(v=0, h=0, col='grey60', lty='dashed')
legend.str <- c(intensity=length(setdiff(xs, xs.ys)), ratio=length(setdiff(ys, xs.ys)), common=length(xs.ys))
legend('topleft', paste(names(legend.str), legend.str, sep=': '), bty='n', col=c('blue', 'green', 'red'), pch=20, title='FDR<1% (2-sample modT)')
colnames(int)
grep(paste(c(126:129, '130N'), collapse = '|') )
grep(paste(c(126:129, '130N'), collapse = '|'), colnames(int) )
grep(paste(c(126:129, '130N'), collapse = '|'), colnames(int), value = T )
exprs <- paste(c(126:129, '130N'), collapse = '|')
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
dim(rat.gsea.exprs)
dist(dim(rat.gsea.exprs))
dist(rat.gsea.exprs)
dist(t(rat.gsea.exprs))
plot(dist(t(rat.gsea.exprs)))
plot(hclust(dist(t(rat.gsea.exprs))))
rat.psea.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_ptmGSEA_ratio_report/2017-11-20/results_PTM-SEA-ratio_20171129-171217/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
rat.psea <- read_excel(rat.psea.str)
rat.psea.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_ptmGSEA_ratio_report/2017-11-20/results_PTM-SEA-ratio_20171129-171217/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
rat.psea <- read_excel(rat.psea.str)
exprs <- paste(c(126:129, '130N'), collapse = '|')
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
rat.psea.exprs <- rat.psea[, grep(exprs, colnames(rat.psea))]
plot(hclust(dist(t(rat.psea.exprs))))
plot(hclust(dist(t(rat.psea.exprs))), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.psea.exprs), method = 'eucledian')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Site-specific signatures (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Gene sest (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main='Gene centrix expression')
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Gene sets (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
rat.sites.str <- '//flynn-cifs/prot_proteomics/LabMembers/Karsten/Projects/20171108_Stegmaier_AML/20171120_ptmGSEA_ratio_report/results_pSTY-pY-sites_20171129-181716/results_Two-sample_mod_T__Median_2017-11-29.xlsx'
rat.sites <- read_excel(rat.sites.str)
exprs <- paste(c(126:129, '130N'), collapse = '|')
# gene-centric
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
# site-centric
rat.sites.exprs <- rat.sites[ , grep(exprs, colnames(rat.sites))]
rat.psea.exprs <- rat.psea[, grep(exprs, colnames(rat.psea))]
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main='Gene-centric expression')
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Gene sets (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main='Site-centric expression')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
db <- readLines(con='c:/Users/karsten/Dropbox/Manuscripts/20170630_PTM-GSEA_manuscript/db/ptm.sig.db.all.uniprot.human.v1.7.gmt') %>% strsplit(split = '\t')
length(db)
rat.psea$id
db <- readLines(con='c:/Users/karsten/Dropbox/Manuscripts/20170630_PTM-GSEA_manuscript/db/ptm.sig.db.all.uniprot.human.v1.7.gmt') %>% strsplit(split = '\t')
names(db) <- sapply(db, function(x)x[1])
db <- lapply(db, function(x)x[3:length(x)])
db[1]
db <- readLines(con='c:/Users/karsten/Dropbox/Manuscripts/20170630_PTM-GSEA_manuscript/db/ptm.sig.db.all.uniprot.human.v1.7.gmt') %>% strsplit(split = '\t')
names(db) <- sapply(db, function(x)x[1])
db <- lapply(db, function(x)sub(';u|;d','',x[3:length(x)]))
db[1]
names(db) %in% rat.psea$id
which(names(db) %in% rat.psea$id)
db[which(names(db) %in% rat.psea$id)]
unlist(db[which(names(db) %in% rat.psea$id)])
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist()
scored.sites
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.array()
scored.sites
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector()
scored.sites
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector()
rat.psea.scored <- rat.psea[ match(scored.sites, rat.psea$id), ]
dim(rat.psea.scored)
dim(rat.psea)
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector()
rat.psea.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
dim(rat.psea.scored)
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector()
rat.sites.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
rat.sites.scored
head(rat.sites.scored)
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector()
scored.sites <- scored.sites[ scored.sites %in%  rat.sites$id]
rat.sites.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
head(rat.sites.scored)
dim(rat.sites.scored)
exprs <- paste(c(126:129, '130N'), collapse = '|')
# gene-centric
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
# site-centric
rat.sites.exprs <- rat.sites[ , grep(exprs, colnames(rat.sites))]
rat.sites.scored <- rat.sites.scored[ , grep(exprs, colnames(rat.sites.scored))]
rat.psea.exprs <- rat.psea[, grep(exprs, colnames(rat.psea))]
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector()
scored.sites <- scored.sites[ scored.sites %in%  rat.sites$id]
rat.sites.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
exprs <- paste(c(126:129, '130N'), collapse = '|')
# gene-centric
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
# site-centric
rat.sites.exprs <- rat.sites[ , grep(exprs, colnames(rat.sites))]
rat.sites.scored.exprs <- rat.sites.scored[ , grep(exprs, colnames(rat.sites.scored))]
rat.psea.exprs <- rat.psea[, grep(exprs, colnames(rat.psea))]
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main='Gene-centric expression')
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Gene sets (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main='Site-centric expression')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.sites.scored.exprs), method = 'euclidean')), main='Site-centric expression')
p_load(morpheus)
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main='Gene-centric expression')
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Gene sets (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main='Site-centric expression')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.sites.scored.exprs), method = 'euclidean')), main='Site-centric expression (sites in PTMsigDB)')
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main=paste('Gene-centric expression\nn=',nrow(rat.exprs)))
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main='Gene sets (MSigDB.C2.CP.v6.0)')
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main='Site-centric expression')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.sites.scored.exprs), method = 'euclidean')), main='Site-centric expression (sites in PTMsigDB)')
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main=paste('Gene-centric expression\nn=',nrow(rat.exprs)))
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main=paste('Gene sets (MSigDB.C2.CP.v6.0)\nn=', nrow(rat.gsea.exprs)))
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main='Site-centric expression')
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main='Site-specific signatures (PTMsigDB v1.7)')
plot(hclust(dist(t(rat.sites.scored.exprs), method = 'euclidean')), main='Site-centric expression (sites in PTMsigDB)')
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main=paste('Gene-centric expression\nn=',nrow(rat.exprs)))
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main=paste('Gene sets (MSigDB.C2.CP.v6.0)\nn=', nrow(rat.gsea.exprs)))
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main=paste('Site-centric expression\nn=', nrow(rat.sites.exprs)))
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main=paste('Site-specific signatures (PTMsigDB v1.7)\nn=', nrow(rat.psea.exprs)))
plot(hclust(dist(t(rat.sites.scored.exprs), method = 'euclidean')), main=paste('Site-centric expression (sites in PTMsigDB)\nn=', nrow(rat.sites.scored.exprs)))
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id)
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector() %>% unique()
scored.sites <- scored.sites[ scored.sites %in%  rat.sites$id]
rat.sites.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
rat.sites.scored[1:10,]
rat.sites.scored[1:5,]
rat.sites.scored.exprs[1:5,]
length(scored.sites)
dim(rat.sites.scored)
dim(rat.sites.scored.exprs)
exprs <- paste(c(126:129, '130N'), collapse = '|')
# gene-centric
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
# site-centric
rat.sites.exprs <- rat.sites[ , grep(exprs, colnames(rat.sites))]
rat.sites.scored.exprs <- rat.sites.scored[ , grep(exprs, colnames(rat.sites.scored))]
rat.psea.exprs <- rat.psea[, grep(exprs, colnames(rat.psea))]
plot(hclust(dist(t(rat.exprs), method = 'euclidean')), main=paste('Gene-centric expression\nn=',nrow(rat.exprs)))
plot(hclust(dist(t(rat.gsea.exprs), method = 'euclidean')), main=paste('Gene sets (MSigDB.C2.CP.v6.0)\nn=', nrow(rat.gsea.exprs)))
plot(hclust(dist(t(rat.sites.exprs), method = 'euclidean')), main=paste('Site-centric expression\nn=', nrow(rat.sites.exprs)))
plot(hclust(dist(t(rat.psea.exprs), method = 'euclidean')), main=paste('Site-specific signatures (PTMsigDB v1.7)\nn=', nrow(rat.psea.exprs)))
plot(hclust(dist(t(rat.sites.scored.exprs), method = 'euclidean')), main=paste('Site-centric expression (sites in PTMsigDB)\nn=', nrow(rat.sites.scored.exprs)))
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id)
?morpheus
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id, width=10, heigh=20)
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id, width=10, height=20)
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id, width=50, height=100)
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id)
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id, colorScheme = 'fixed')
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id)
morpheus(rat.sites.scored.exprs, labRow = rat.sites.scored$id, height=10, width=20)
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector() %>% unique()
scored.sites <- scored.sites[ scored.sites %in%  rat.sites$id]
rat.sites.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
db.scored <- lapply(db, function(x) x[x %in% scored.sites])
exprs <- paste(c(126:129, '130N'), collapse = '|')
# gene-centric
int.exprs <- int[, grep(exprs, colnames(int))]
rat.exprs <- rat[, grep(exprs, colnames(rat))]
int.gsea.exprs <- int.gsea[, grep(exprs, colnames(int.gsea))]
rat.gsea.exprs <- rat.gsea[, grep(exprs, colnames(rat.gsea))]
# site-centric
rat.sites.exprs <- rat.sites[ , grep(exprs, colnames(rat.sites))]
rat.sites.scored.exprs <- rat.sites.scored[ , grep(exprs, colnames(rat.sites.scored))]
rat.psea.exprs <- rat.psea[, grep(exprs, colnames(rat.psea))]
length(db.scored)
scored.sites <- db[which(names(db) %in% rat.psea$id)] %>% unlist() %>% as.vector() %>% unique()
scored.sites <- scored.sites[ scored.sites %in%  rat.sites$id]
rat.sites.scored <- rat.sites[ match(scored.sites, rat.sites$id), ]
db.scored <- db[ which(names(db) %in% rat.psea$id) ]
db.scored <- lapply(db.scored, function(x) x[x %in% scored.sites])
length(db.scored)
sig.ol=lapply(db.scored, function(x) lapply(db.scored, function(y) sum(x %in% y)/length(x)))
sig.ol=matrix(unlist(sig.ol), nrow=length(sig.ol), byrow = T, dimnames = list(make.unique(names(sig.ol)), names(sig.ol)))
sig.ol
sig.ol=lapply(db.scored, function(x) lapply(db.scored, function(y) sum(x %in% y)/length(x)))
sig.ol=matrix(unlist(sig.ol), nrow=length(sig.ol), byrow = T, dimnames = list(make.unique(names(sig.ol)), names(sig.ol)))
heatmaply(sig.ol, cexRow = 3, cexCol = 3, symm = T)
p_load(heatmaply)
sig.ol=lapply(db.scored, function(x) lapply(db.scored, function(y) sum(x %in% y)/length(x)))
sig.ol=matrix(unlist(sig.ol), nrow=length(sig.ol), byrow = T, dimnames = list(make.unique(names(sig.ol)), names(sig.ol)))
p_load(heatmaply)
heatmaply(sig.ol, cexRow = 3, cexCol = 3, symm = T)
p_load(heatmaply)
heatmaply(sig.ol, cexRow = 3, cexCol = 3, symm = T)
library(shiny)
runApp('Dropbox/Devel/modT')
tmp = parse.gctx('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct')
warnings()
tmp = parse.gctx('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct')
?parse.gtx
tmp = parse.gctx('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct', version=1.3)
tmp = parse.gctx('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct', version='1.3)
''
tmp = parse.gctx('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct', version='1.3')
tmp = read.gctx.meta('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct')
scan(src, what = double(0), nlines = 1, skip = 1, sep = "\t", quiet = TRUE)
scan('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct', what = double(0), nlines = 1, skip = 1, sep = "\t", quiet = TRUE)
tmp = parse.gctx('c:/Users/karsten/Dropbox/Devel/Sample data/gct1.3/H3122_pSTY_pY_desalt_v1_FULL_LOC_MedianNorm_site_centric_1.3.gct')
m
tmp@rid
dim(tmp@rid)
dim(tmp@rdesc)
colnames(tmp@rdesc)
runApp('Dropbox/Devel/modT')
tmp
runApp('Dropbox/Devel/modT')
